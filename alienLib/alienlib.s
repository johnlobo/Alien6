;******************************
; printSpriteXOR (int sprite, char x, char y, int direccion)
;
; @John Lobo Nov15  
;******************************
.globl _printSpriteXOR
_printSpriteXOR::			; dibujar en pantalla el sprite
	exx						; cambio los registros
	ld ix,#2
	add ix,sp
	ld e,0 (ix)				;sprite
	ld d,1 (ix)
	ld b,2 (ix)				;x
	ld c,3 (ix)				;y
   	ld l,4 (ix)				;direccion del pantalla
	ld h,5 (ix)

	ld a,h					;compruebo si la dirección es 0 para calcularla o pasar a calcular el clipping
	or #0
	jr nz,#calcularClipping
	ld a,l
	or #0
	jr nz,#calcularClipping
calcularDireccion:			;busco la dirección de pantalla en la tabla de direcciones 
	push de					;preservo DE
	ld hl,#direcciones
	ld a,c					;busco la dirección del alto
	sla a
	add l
	ld e,(hl)
	inc hl
	ld d,(hl)				;hl tiene la dirección del primer byte de la linea
	ld a,b					;cargo el desplazamiento horizontal
	add e
	ld e,a
	ex de,hl				;cargo en hl la direccion calculada
	pop de
calcularClipping:
ancho: .db 0				;almacena el ancho del sprite a imprimir
alto: .db 0					;almacena el ancho del sprite a imprimir
	ld a,(de)
	ld (#ancho),a
	add b
	cp #0x9F
	jr NC,#calculoAlto
	ld a,#0x9F
	sub b
	ld (#ancho),a
calculoAlto:
	inc de
	ld a,(de)
	ld (#alto),a
	add c
	cp #0xc7
	jr NC,#imprimirSprite
	ld a,#0xc7
	sub c
	ld (#alto),a	
imprimirSprite:	
	; Entradas	de-> origen
	;			hl-> destino
	; Se alteran hl, bc, de, af

	ld a,#ancho

    LD (#anchox0+#1),A		;actualizo rutina de captura
	SUB #1
	CPL
	LD (#suma_siguiente_lineax0+#1),A    ;comparten los 2 los mismos valores.

	LD A,#alto
	JP cpc_PutSpXOR0

cpc_PutSpXOR0:
	.DB #0XFD
	LD H,A		;ALTO, SE PUEDE TRABAJAR CON HX DIRECTAMENTE
	LD B,#7
anchox0:
loop_alto_2x:
	LD C,#4
loop_ancho_2x:
	LD A,(DE)
	XOR (HL)
	LD (HL),A
	INC DE
	INC HL
	DEC C
	JP NZ,loop_ancho_2x
	.DB #0XFD
	DEC H
	jr Z,#volver

suma_siguiente_lineax0:
salto_lineax:
	LD C,#0XFF			;&07F6 			;SALTO LINEA MENOS ANCHO
	ADD HL,BC
	JP NC,loop_alto_2x ;SIG_LINEA_2ZZ		;SI NO DESBORDA VA A LA SIGUIENTE LINEA
	LD BC,#0XC050
	ADD HL,BC
	LD B,#7			;SÓLO SE DARÍA UNA DE CADA 8 VECES EN UN SPRITE
	JP loop_alto_2x

volver:
	exx
	ret


direcciones:
.dw #0xC000,#0xC800,#0xD000,#0xD800,#0xE000,#0xE800,#0xF000,#0xF800,#0xC050,#0xC850,#0xD050,#0xD850,#0xE050,#0xE850,#0xF050,#0xF850,#0xC0A0,#0xC8A0,#0xD0A0,#0xD8A0,#0xE0A0,#0xE8A0,#0xF0A0,#0xF8A0,#0xC0F0,#0xC8F0,#0xD0F0,#0xD8F0,#0xE0F0,#0xE8F0,#0xF0F0,#0xF8F0,#0xC140,#0xC940,#0xD140,#0xD940,#0xE140,#0xE940,#0xF140,#0xF940,#0xC190,#0xC990,#0xD190,#0xD990,#0xE190,#0xE990,#0xF190,#0xF990,#0xC1E0,#0xC9E0,#0xD1E0,#0xD9E0,#0xE1E0,#0xE9E0,#0xF1E0,#0xF9E0,#0xC230,#0xCA30,#0xD230,#0xDA30,#0xE230,#0xEA30,#0xF230,#0xFA30,#0xC280,#0xCA80,#0xD280,#0xDA80,#0xE280,#0xEA80,#0xF280,#0xFA80,#0xC2D0,#0xCAD0,#0xD2D0,#0xDAD0,#0xE2D0,#0xEAD0,#0xF2D0,#0xFAD0,#0xC320,#0xCB20,#0xD320,#0xDB20,#0xE320,#0xEB20,#0xF320,#0xFB20,#0xC370,#0xCB70,#0xD370,#0xDB70,#0xE370,#0xEB70,#0xF370,#0xFB70,#0xC3C0,#0xCBC0,#0xD3C0,#0xDBC0,#0xE3C0,#0xEBC0,#0xF3C0,#0xFBC0,#0xC410,#0xCC10,#0xD410,#0xDC10,#0xE410,#0xEC10,#0xF410,#0xFC10,#0xC460,#0xCC60,#0xD460,#0xDC60,#0xE460,#0xEC60,#0xF460,#0xFC60,#0xC4B0,#0xCCB0,#0xD4B0,#0xDCB0,#0xE4B0,#0xECB0,#0xF4B0,#0xFCB0,#0xC500,#0xCD00,#0xD500,#0xDD00,#0xE500,#0xED00,#0xF500,#0xFD00,#0xC550,#0xCD50,#0xD550,#0xDD50,#0xE550,#0xED50,#0xF550,#0xFD50,#0xC5A0,#0xCDA0,#0xD5A0,#0xDDA0,#0xE5A0,#0xEDA0,#0xF5A0,#0xFDA0,#0xC5F0,#0xCDF0,#0xD5F0,#0xDDF0,#0xE5F0,#0xEDF0,#0xF5F0,#0xFDF0,#0xC640,#0xCE40,#0xD640,#0xDE40,#0xE640,#0xEE40,#0xF640,#0xFE40,#0xC690,#0xCE90,#0xD690,#0xDE90,#0xE690,#0xEE90,#0xF690,#0xFE90,#0xC6E0,#0xCEE0,#0xD6E0,#0xDEE0,#0xE6E0,#0xEEE0,#0xF6E0,#0xFEE0,#0xC730,#0xCF30,#0xD730,#0xDF30,#0xE730,#0xEF30,#0xF730,#0xFF30,#0xC780,#0xCF80,#0xD780,#0xDF80,#0xE780,#0xEF80,#0xF780,#0xFF80
